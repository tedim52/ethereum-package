name: Pull Docker Images

on:
  workflow_dispatch:

jobs:
  pull-images:
    runs-on: ubuntu-latest
    steps:
      # authenticated with docker.io
      # - uses: ./.github/actions/docker-login
      #   with:
      #     username: tedim52
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      # - uses: ./.github/actions/docker-login
      #   with:
      #     username: ethpandaops
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Install regctl
        uses: regclient/actions/regctl-installer@ce5fd131e371ffcdd7508b478cb223b3511a9183

      - name: Logout from Docker Hub registry
        shell: bash
        run: |
          regctl registry logout docker.io

      - name: Check Docker Hub Rate Limits

        shell: bash
        run: |
          regctl registry logout docker.io
          regctl image ratelimit ubuntu:latest

      - name: Initialize Counter
        run: echo "COUNTER=1" >> $GITHUB_ENV

      - name: Pull Docker Hub Images (First Round)
        run: |
          images=(
                       )
          for image in "${images[@]}"; do
            echo "Pull #${{ env.COUNTER }}: Pulling $image..."
            docker pull "docker.io/$image" || echo "Failed to pull $image — skipping."
            echo "COUNTER=$((${{ env.COUNTER }} + 1))" >> $GITHUB_ENV
          done

      - name: Check Docker Hub Rate Limits
        shell: bash
        run: regctl image ratelimit ubuntu:latest

      - name: Remove Images to make space
        run: |
          docker image prune -a -f

      - name: Pull Docker Hub Images (Second Round)
        run: |
          images=(
            "alpine"
            "ubuntu"
            "nginx"
            "redis"
            "postgres"
            "node"
            "python"
            "golang"
            "mongo"
            "mysql"
            "busybox"
            "httpd"
            "debian"
            "traefik"
            "elasticsearch"
            "logstash"
            "kibana"
            "vault"
            "consul"
            "haproxy"
            "php"
            "ruby"
            "openjdk"
            "tomcat"
            "influxdb"
            "grafana/grafana"
            "prom/prometheus"
            "prom/alertmanager"
            "telegraf"
            "zookeeper"
            "cassandra"
            "rabbitmq"
            "bitnami/nginx"
            "bitnami/mariadb"
            "bitnami/redis"
            "bitnami/postgresql"
            "bitnami/mongodb"
            "bitnami/jenkins"
            "bitnami/grafana"
            "bitnami/prometheus"
            "bitnami/apache"
            "bitnami/minio"
            "bitnami/kafka"
           )
          for image in "${images[@]}"; do
            echo "Pull #${{ env.COUNTER }}: Pulling $image..."
            docker pull "docker.io/$image" || echo "Failed to pull $image — skipping."
            echo "COUNTER=$((${{ env.COUNTER }} + 1))" >> $GITHUB_ENV
          done

      - name: Check Docker Hub Rate Limits
        shell: bash
        run: regctl image ratelimit ubuntu:latest

      - name: Remove Images to make space
        run: |
          docker image prune -a -f

      - name: Pull Docker Hub Images (Third Round)
        run: |
          images=(
            "alpine"
            "ubuntu"
            "nginx"
            "redis"
            "postgres"
            "node"
            "python"
            "golang"
            "mongo"
            "mysql"
            "busybox"
            "httpd"
            "debian"
            "traefik"
            "elasticsearch"
            "logstash"
            "kibana"
            "vault"
            "consul"
            "haproxy"
            "php"
            "ruby"
            "openjdk"
            "tomcat"
            "influxdb"
            "grafana/grafana"
            "prom/prometheus"
            "prom/alertmanager"
            "telegraf"
            "zookeeper"
            "cassandra"
            "rabbitmq"
            "bitnami/nginx"
            "bitnami/mariadb"
            "bitnami/redis"
            "bitnami/postgresql"
            "bitnami/mongodb"
            "bitnami/jenkins"
            "bitnami/grafana"
            "bitnami/prometheus"
            "bitnami/apache"
            "bitnami/minio"
            "bitnami/kafka"
           )
          for image in "${images[@]}"; do
            echo "Pull #${{ env.COUNTER }}: Pulling $image..."
            docker pull "docker.io/$image" || echo "Failed to pull $image — skipping."
            echo "COUNTER=$((${{ env.COUNTER }} + 1))" >> $GITHUB_ENV
          done

      - name: Check Docker Hub Rate Limits
        shell: bash
        run: regctl image ratelimit ubuntu:latest

      - name: Remove Images to make space
        run: |
          docker image prune -a -f

      - name: Pull Docker Hub Images (Fourth Round)
        run: |
          images=(
            "alpine"
            "ubuntu"
            "nginx"
            "redis"
            "postgres"
            "node"
            "python"
            "golang"
            "mongo"
            "mysql"
            "busybox"
            "httpd"
            "debian"
            "traefik"
            "elasticsearch"
            "logstash"
            "kibana"
            "vault"
            "consul"
            "haproxy"
            "php"
            "ruby"
            "openjdk"
            "tomcat"
            "influxdb"
            "grafana/grafana"
            "prom/prometheus"
            "prom/alertmanager"
            "telegraf"
            "zookeeper"
            "cassandra"
            "rabbitmq"
            "bitnami/nginx"
            "bitnami/mariadb"
            "bitnami/redis"
            "bitnami/postgresql"
            "bitnami/mongodb"
            "bitnami/jenkins"
            "bitnami/grafana"
            "bitnami/prometheus"
            "bitnami/apache"
            "bitnami/minio"
            "bitnami/kafka"
           )
          for image in "${images[@]}"; do
            echo "Pull #${{ env.COUNTER }}: Pulling $image..."
            docker pull "docker.io/$image" || echo "Failed to pull $image — skipping."
            echo "COUNTER=$((${{ env.COUNTER }} + 1))" >> $GITHUB_ENV
          done

      - name: Check Docker Hub Rate Limits
        shell: bash
        run: regctl image ratelimit ubuntu:latest

      - name: Remove Images to make space
        run: |
          docker image prune -a -f

      - name: Pull Docker Hub Images (Fifth Round)
        run: |
          images=(
            "alpine"
            "ubuntu"
            "nginx"
            "redis"
            "postgres"
            "node"
            "python"
            "golang"
            "mongo"
            "mysql"
            "busybox"
            "httpd"
            "debian"
            "traefik"
            "elasticsearch"
            "logstash"
            "kibana"
            "vault"
            "consul"
            "haproxy"
            "php"
            "ruby"
            "openjdk"
            "tomcat"
            "influxdb"
            "grafana/grafana"
            "prom/prometheus"
            "prom/alertmanager"
            "telegraf"
            "zookeeper"
            "cassandra"
            "rabbitmq"
            "bitnami/nginx"
            "bitnami/mariadb"
            "bitnami/redis"
            "bitnami/postgresql"
            "bitnami/mongodb"
            "bitnami/jenkins"
            "bitnami/grafana"
            "bitnami/prometheus"
            "bitnami/apache"
            "bitnami/minio"
            "bitnami/kafka"
           )
          for image in "${images[@]}"; do
            echo "Pull #${{ env.COUNTER }}: Pulling $image..."
            docker pull "docker.io/$image" || echo "Failed to pull $image — skipping."
            echo "COUNTER=$((${{ env.COUNTER }} + 1))" >> $GITHUB_ENV
          done

      - name: Check Docker Hub Rate Limits
        shell: bash
        run: regctl image ratelimit ubuntu:latest

      - name: Remove Images to make space
        run: |
          docker image prune -a -f

      - name: Pull Docker Hub Images (Sixth Round)
        run: |
          images=(
            "alpine"
            "ubuntu"
            "nginx"
            "redis"
            "postgres"
            "node"
            "python"
            "golang"
            "mongo"
            "mysql"
            "busybox"
            "httpd"
            "debian"
            "traefik"
            "elasticsearch"
            "logstash"
            "kibana"
            "vault"
            "consul"
            "haproxy"
            "php"
            "ruby"
            "openjdk"
            "tomcat"
            "influxdb"
            "grafana/grafana"
            "prom/prometheus"
            "prom/alertmanager"
            "telegraf"
            "zookeeper"
            "cassandra"
            "rabbitmq"
            "bitnami/nginx"
            "bitnami/mariadb"
            "bitnami/redis"
            "bitnami/postgresql"
            "bitnami/mongodb"
            "bitnami/jenkins"
            "bitnami/grafana"
            "bitnami/prometheus"
            "bitnami/apache"
            "bitnami/minio"
            "bitnami/kafka"
           )
          for image in "${images[@]}"; do
            echo "Pull #${{ env.COUNTER }}: Pulling $image..."
            docker pull "docker.io/$image" || echo "Failed to pull $image — skipping."
            echo "COUNTER=$((${{ env.COUNTER }} + 1))" >> $GITHUB_ENV
          done

      - name: Check Docker Hub Rate Limits
        shell: bash
        run: regctl image ratelimit ubuntu:latest

      - name: Remove Images to make space
        run: |
          docker image prune -a -f

      - name: Pull Docker Hub Images (Seventh Round)
        run: |
          images=(
            "alpine"
            "ubuntu"
            "nginx"
            "redis"
            "postgres"
            "node"
            "python"
            "golang"
            "mongo"
            "mysql"
            "busybox"
            "httpd"
            "debian"
            "traefik"
            "elasticsearch"
            "logstash"
            "kibana"
            "vault"
            "consul"
            "haproxy"
            "php"
            "ruby"
            "openjdk"
            "tomcat"
            "influxdb"
            "grafana/grafana"
            "prom/prometheus"
            "prom/alertmanager"
            "telegraf"
            "zookeeper"
            "cassandra"
            "rabbitmq"
            "bitnami/nginx"
            "bitnami/mariadb"
            "bitnami/redis"
            "bitnami/postgresql"
            "bitnami/mongodb"
            "bitnami/jenkins"
            "bitnami/grafana"
            "bitnami/prometheus"
            "bitnami/apache"
            "bitnami/minio"
            "bitnami/kafka"
           )
          for image in "${images[@]}"; do
            echo "Pull #${{ env.COUNTER }}: Pulling $image..."
            docker pull "docker.io/$image" || echo "Failed to pull $image — skipping."
            echo "COUNTER=$((${{ env.COUNTER }} + 1))" >> $GITHUB_ENV
          done

      - name: Check Docker Hub Rate Limits
        shell: bash
        run: regctl image ratelimit ubuntu:latest

      - name: Remove Images to make space
        run: |
          docker image prune -a -f

      - name: Pull Docker Hub Images (Eighth Round)
        run: |
          images=(
            "alpine"
            "ubuntu"
            "nginx"
            "redis"
            "postgres"
            "node"
            "python"
            "golang"
            "mongo"
            "mysql"
            "busybox"
            "httpd"
            "debian"
            "traefik"
            "elasticsearch"
            "logstash"
            "kibana"
            "vault"
            "consul"
            "haproxy"
            "php"
            "ruby"
            "openjdk"
            "tomcat"
            "influxdb"
            "grafana/grafana"
            "prom/prometheus"
            "prom/alertmanager"
            "telegraf"
            "zookeeper"
            "cassandra"
            "rabbitmq"
            "bitnami/nginx"
            "bitnami/mariadb"
            "bitnami/redis"
            "bitnami/postgresql"
            "bitnami/mongodb"
            "bitnami/jenkins"
            "bitnami/grafana"
            "bitnami/prometheus"
            "bitnami/apache"
            "bitnami/minio"
            "bitnami/kafka"
           )
          for image in "${images[@]}"; do
            echo "Pull #${{ env.COUNTER }}: Pulling $image..."
            docker pull "docker.io/$image" || echo "Failed to pull $image — skipping."
            echo "COUNTER=$((${{ env.COUNTER }} + 1))" >> $GITHUB_ENV
          done

      - name: Check Docker Hub Rate Limits
        shell: bash
        run: regctl image ratelimit ubuntu:latest 